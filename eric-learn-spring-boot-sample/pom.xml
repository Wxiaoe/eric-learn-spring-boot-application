<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>eric-learn-spring-boot-application</artifactId>
        <groupId>com.example</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>jar</packaging>
    <artifactId>eric-learn-spring-boot-sample</artifactId>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.example</groupId>
            <artifactId>formatter-spring-boot-starter</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <!--如果parent引入了spring-boot会自动带入maven-war-plugin和spring-boot-plugin，则无需下面单独的maven-war-plugin和boot-maven-plugin的repackage-->
    <build>
        <plugins>
            <!--3.保持与spring-boot-dependencies版本一致
                老版本的maven-war-plugin:2.2中，默认的打包规则必须存在web应用部署描述文件WEB-INF/web.xml，
                而maven-war-plugin:3.1开始调整了该默认行为-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-war-plugin</artifactId>-->
            <!--<version>${maven-var-plugin.version}</version>-->
            <!--</plugin>-->

            <!-- 9.compiler默认的java版本时1.5,webflux需要1.8支持
            source：表示源文件的版本
            target：表示编译时候的版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!--3. 单独引入spring-boot-plugin插件时，主要配置repakage <goal>元素，否则不会添加spring boot引导,进而无法引导当前应用-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.2.8.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>